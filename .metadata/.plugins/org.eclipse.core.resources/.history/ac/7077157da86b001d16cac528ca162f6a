package com.testedev.teste_desenvolvedor.services;

import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.testedev.teste_desenvolvedor.entities.Funcionarios;
import com.testedev.teste_desenvolvedor.repositories.FuncionarioRepository;

@Service
public class FuncionarioService {
	
	@Autowired
	private FuncionarioRepository repository;
	
	public List<Funcionarios> findAll() {
		return repository.findAll();
	}
	
	public Funcionarios findById(Long id) {
		return repository.findById(id).get();
	}
	
	public Funcionarios insert(Funcionarios funcionario) {
		return repository.save(funcionario);
	}
	
	public Funcionarios atualizar(Long id, Funcionarios funcionario) {
		Funcionarios result = findById(id);
		
		if(result.getId().equals(id)){
			result.setNomeFuncionario(funcionario.getNomeFuncionario());
			result.setSobrenomeFuncionario(funcionario.getSobrenomeFuncionario());
			result.setEmail(funcionario.getEmail());
			result.setNis(funcionario.getNis());
		
			return repository.save(result);
		}
		return null;
	}
	
	public void deleteById(Long id) {
		repository.deleteById(id);
	}
	
	
	private static final String EMAIL_PATTERN = 
	        "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
	        + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";

	private static final Pattern pattern = Pattern.compile(EMAIL_PATTERN, Pattern.CASE_INSENSITIVE);
	
	public static boolean validarEmail(String email){
	    return pattern.matcher(email).matches();
	 }
}
